
.. 3111140000:

Steps to setup the local dev env
################################


Fully Automated Method
**********************

Clone the repo
==============

.. code-block:: bash

   git clone https://github.com/AFDSI/websites.git -b docker-updates


Note: For now, you may use the above |end| mentioned repository and branch. After your confirmation, I can raise a PR and get this merged to the repo/branch of your choice.

Create a PAT (Personal Access Token) and update ``docker-compose.yml`` file.
========================================================================

Create a PAT:

https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token

Once the PAT is generated, copy and paste it on the notepad. 

To setup the local dev env, the script ``local-env-setup.sh`` is created. Please, run the following commands to start the build process.

.. code-block:: bash

   cd websites

   ./local-env-setup.sh --build

The script might take 25 |end| 30 minutes. Please, grab a coffee and wait for it to finish.

If everything goes well, the services will be started and can be accessed on 8080 and 8083 ports. 

If you can see the messages as shown below, it means you are in luck.

.. image:: _images/image1.png
   :width: 6.26806in
   :height: 0.59167in

Voila!

If you have reached till here, then you may consider the ``local dev env`` to be ready. 


Build your changes
==================

Now, you may do the changes in the codebase as usual. After doing the changes, please issue the command the below command to restart the services and bring the changes into effect.

.. code-block:: bash

   ./local-env-setup.sh --reload


Validate your changes
=====================

You may access the services over the browser on the below mentioned addresses to validate the changes.


* http://localhost:8080

* http://localhost:8083


Run Bootstrap [Optional]
========================

Although, during the build process the bootstrap command will run, but still for any reason you want to run the bootstrap command, you may issue the below command:

.. code-block:: bash

   ./local-env-setup.sh --bootstrap


Clean |end| up of containers, cache, and networks [Recommended]
===============================================================

With the current local dev env approach, you might see several containers in the “exited” state doing nothing. These containers do not consume CPU and memory but can hog up space. To remove these containers, you can issue the below command.

This command stops (if running) and removes all the AFDSI/websites containers and networks. It does not delete AFDSI/websites image(s), volumes, and source-code.

.. code-block:: bash

   ./local-env-setup.sh --clean


Full Clean |end| Up [Optional]
==============================

If you ever want to set up everything from the scratch, you can issue the below command. It will delete the “AFDSI/websites” images, networks, and containers. Volumes and repository will not be deleted. That must be deleted manually if needed. 

.. code-block:: bash

   ./local-env-setup.sh –clean-all


Manual Method
*************

Although the automated method should work for most of the operating systems, platforms, cloud VMs but If for any reason, it doesn’t work for your environment/platform, you may use the manual method to setup the local dev env for you. This method will help you setup things faster, but has its own limitations.


Clone the repo
==============

.. code-block:: bash

   git clone https://github.com/AFDSI/websites.git -b docker-updates

Note: For now, you may use the above |end| mentioned repository and branch. After your confirmation, I can raise a PR and get this merged to the repo/branch of your choice.


Create a PAT (Personal Access Token) and update ``docker-compose-manual.yml`` file.
===============================================================================

Create a PAT: 

https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token

Once the PAT is generated, copy and update the ``docker-compose-manual.yml`` file (environment section).


Build the container and bring up the application.
=================================================

.. code-block:: shell

   docker-compose -f docker-compose-manual.yml up -d


Exec into the container and run commands.
=========================================

.. code-block:: shell

   docker-compose ps (copy the container name/id from here)

   docker exec -it <container-id>/<name> /bin/bash


After getting the shell, you may run the following commands:

.. code-block:: shell

   npm install

   npm run bootstrap

   npm run develop


Note: 
=====

The container has sleep command as CMD.

``npm run develop`` will stop as soon as you exit the container. If you like to keep it running, then you may have to run it in background(&) in combination with ``nohup``.


.. include:: substitution.txt
